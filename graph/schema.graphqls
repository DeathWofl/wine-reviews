scalar Time

# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type AuthToken {
  token: String!
  expiredAt: Time!
}

type AuthResponse {
  authToken: AuthToken!
  user: User!
}

type Wine {
  id: ID!
  name: String!
  shortDes: String!
  Winery: Winery!
}

type Winery {
  id: ID!
  name: String!
  location: String!
  stars: Int
}

type Review {
  id: ID!
  score: Int!
  text: String!
  wine: Wine!
  user: User!
}

type User {
  id: ID!
  username: String!
  email: String!
  firstname: String!
  lastname: String!
  reviews: [Review!]!
}

type Query {
  wines(filter: WineFilter, limit: Int = 10): [Wine!]!
  reviews: [Review!]!
}

input WineFilter {
  name: String
}

input RegisterInput {
  username: String!
  password: String!
  confirmpassword: String!
  email: String!
  firstName: String!
  lastName: String!
}

input NewWineInput {
 name: String!
 shortDes: String!
 wineryID: Int!
}

input UpdateWineInput {
  name: String!
  shortDes: String!
}

input NewWineryInput {
  name: String!
  location: String!
  stars: Int!
}

input UpdateWineryInput {
  name: String!
  location: String!
  stars: Int
}

input NewReviewInput {
  score: Int!
  text: String!
  wineID: Int!
  UserID: Int!
}

input UpdateReviewInput {
  score: Int!
  text: String!
}

type Mutation {
  # Auth
  register(input: RegisterInput!): AuthResponse!
  # Creates
  createWinery(input: NewWineryInput!): Winery!
  createReview(input: NewReviewInput!): Review!
  createWine(input: NewWineInput!): Wine!
  # Updates
  updateWine(id: ID!, input: UpdateWineInput!):Wine!
  updateWinery(id: ID!, input: UpdateWineryInput!):Winery!
  updateReview(id: ID!, input: UpdateReviewInput!):Review!
  # Delete
  deleteWine(id: ID!):Boolean!
  deleteWinery(id: ID!):Boolean!
  deleteReview(id: ID!):Boolean!
}